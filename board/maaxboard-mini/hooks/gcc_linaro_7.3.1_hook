#!/bin/bash
# this script will be loaded,and run function[gcc_all_build] when needed
# the "gcc_all_build" name must be fixed.
# if need to define functions,please name "function gcc_[boardname]_*",that avoids overlapping names
#


# prepare gcc
# param $1 : Work directory
# output src path ${LINUX_GCC_OUTPUT}
function gcc_all_build(){
    if [[ -n $CROSS_COMPILE ]];then
        return 0;
    fi

    local BASE_ROOT=$1
    cd $BASE_ROOT
    if [[ ! -s "./gcc-linaro-7.3.1-2018.05-x86_64_aarch64-linux-gnu.tar.xz" ]];then 
        log_info "start download gcc...."
        wget https://xterra2.avnet.com/embest/imx8m/debian-rootfs-util/-/raw/master/gcc/gcc-arm-9.2-2019.12-x86_64-aarch64-none-linux-gnu.tar.xz?inline=false -O gcc-arm-9.2-2019.12-x86_64-aarch64-none-linux-gnu.tar.xz
        
    fi
    
    if [[ ! -d "./gcc-linaro-7.3.1-2018.05-x86_64_aarch64-linux-gnu/bin/" ]];then
        if [[ -s "./gcc-linaro-7.3.1-2018.05-x86_64_aarch64-linux-gnu.tar.xz" ]] ;then
            log_info "tar -Jxvf gcc-linaro-7.3.1-2018.05-x86_64_aarch64-linux-gnu.tar.xz..."
            tar -Jxvf gcc-linaro-7.3.1-2018.05-x86_64_aarch64-linux-gnu.tar.xz  > /dev/null 2>&1
            cp gcc-linaro-7.3.1-2018.05-x86_64_aarch64-linux-gnu.tar.xz ${LINUX_GCC_OUTPUT}
        fi
    fi

    export CROSS_COMPILE=${BASE_ROOT}"/gcc-linaro-7.3.1-2018.05-x86_64_aarch64-linux-gnu/bin/aarch64-linux-gnu-"
    export ARCH=arm64
    cd -
}